# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - uses: PyO3/maturin-action@v1
      with:
        args: --release --out dist
    - name: Test with pytest
      run: |
        python -m pip install teanga --no-index --find-links dist --force-reinstall
        # Pytest loads `teanga` from the source folder, so we have to manually
        # copy the Rust code to the source folder to run the tests
        cp /opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/teanga/_db* python/teanga/
        python -m pytest --doctest-modules
